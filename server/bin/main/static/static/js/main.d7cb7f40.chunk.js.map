{"version":3,"sources":["components/GroceryList/index.js","containers/GroceryList/index.js","redux/actions/index.js","redux/ActionTypes.js","App.js","redux/reducers/groceryList.js","redux/reducers/index.js","redux/sagas/index.js","utils/constants.js","redux/socket/index.js","index.js","logo.svg"],"names":["InteractiveList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addGrocery","item","id","state","name","price","add","setState","handleNameChange","e","target","value","handlePriceChange","Number","_this$props","groceries","classes","react_default","a","createElement","Paper","className","container","noValidate","autoComplete","TextField","label","textField","onChange","margin","variant","Button","button","onClick","Grid","xs","md","Typography","title","demo","List","dense","map","ListItem","ListItemText","groceryItem","primary","secondary","React","Component","useStyles","withStyles","theme","root","flex","backgroundColor","palette","background","paper","display","flexWrap","marginLeft","spacing","marginRight","marginTop","fontWeight","color","padding","connect","valueSeq","grocery","type","payload","ListComponent","App","src","logo","alt","GroceryList_List","initialState","Map","rootReducer","combineReducers","arguments","length","undefined","action","mergeDeep","defineProperty","handleNewGrocery","regenerator_default","mark","socket","wrap","_context","prev","next","takeEvery","send","JSON","stringify","stop","setupSocket","dispatch","SockJS","stompClient","Stomp","over","frame","console","log","subscribe","msg","parse","body","content","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","handleGroceries","ReactDOM","render","es","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d7cb7f40.chunk.js","sourcesContent":["import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class InteractiveList extends React.Component {\n    constructor(props) {\n    super(props);\n        this.state = {\n            id: 0,\n            name: '',\n            price: 0\n        }\n    }\n\n    addGrocery = () => {\n        const item = {\n            id: this.state.id,\n            name: this.state.name,\n            price: this.state.price\n        }\n        this.props.add(item);\n        this.setState({ id: this.state.id + 1 })\n    }\n\n    handleNameChange = (e) => this.setState({ name: e.target.value });\n\n    handlePriceChange = (e) => this.setState({ price: Number(e.target.value) });\n\n\n    render() {\n    const { groceries, classes } = this.props;\n      \n        return (\n            <Paper>\n                <form className={classes.container} noValidate autoComplete=\"off\">\n                <TextField\n                    id=\"outlined-name\"\n                    label=\"Name\"\n                    className={classes.textField}\n                    value={this.state.name}\n                    onChange={this.handleNameChange}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-name\"\n                    label=\"Price\"\n                    className={classes.textField}\n                    value={this.state.price}\n                    onChange={this.handlePriceChange}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <br />\n                <Button className={classes.button} onClick={this.addGrocery}>Add Grocery Item</Button>\n                </form>\n                <Grid item xs={12} md={12}>\n                    <Typography variant=\"h6\" className={classes.title}>\n                    Grocery List\n                    </Typography>\n                    <div className={classes.demo}>\n                        <List dense={true}>\n                            {groceries.map(item => (\n                            <ListItem>\n                                <ListItemText\n                                className={classes.groceryItem}\n                                primary={item.name}\n                                secondary={item.price ? item.price : 'Not in stock'}\n                                />\n                            </ListItem>\n                            ))}\n                        </List>\n                    </div>\n                </Grid>\n            </Paper>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport ListComponent from '../../components/GroceryList'\nimport { withStyles } from '@material-ui/core/styles'\nimport { addGrocery } from '../../redux/actions'\nimport { green } from '@material-ui/core/colors';\n\n\nconst useStyles = withStyles(theme => ({\n    root: {\n      flex: '1 1 100%',\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    dense: {\n      marginTop: theme.spacing(2),\n    },\n    title: {\n      margin: theme.spacing(2, 0, 2),\n      fontWeight: '600',\n      color: 'purple'\n    },\n    groceryItem: {\n        color: 'blue'\n    },\n    button: {\n      color: 'green',\n      padding: '10px'\n    }\n  }));\n\nexport const List = connect(state => ({\n  groceries: state.groceries.valueSeq()\n}), {\n    add: (grocery) => addGrocery(grocery)\n})(useStyles(ListComponent))","import * as types from '../ActionTypes'\n\nexport const addGrocery = (payload) => ({\n  type: types.ADD_GROCERY,\n  payload\n})\n\nexport const groceryReceived = (payload) => ({\n    type: types.GROCERIES_RECEIVED,\n    payload\n  })","export const GROCERIES_RECEIVED = 'GROCERIES_RECEIVED'\nexport const ADD_GROCERY = 'ADD_GROCERY'","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { List } from './containers/GroceryList'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <List />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { Map } from 'immutable';\nimport * as types from '../ActionTypes';\n\nconst initialState = Map();\n\nexport default(state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n      case types.GROCERIES_RECEIVED:\n        return state.mergeDeep({ [payload.id]: payload });\n      // case types.ADD_GROCERY:\n      //   return state.merge(payload);\n      default:\n        return state\n    }\n  }\n","import { combineReducers } from 'redux'\nimport groceryList from './groceryList'\n\nconst rootReducer = combineReducers({\ngroceries: groceryList\n})\n\nexport default rootReducer","import { takeEvery } from 'redux-saga/effects'\nimport * as types from '../ActionTypes'\nimport { TOPIC_INBOUND } from '../../utils/constants'\n\nconst handleNewGrocery = function* handleNewGrocery(socket) {\n  yield takeEvery(types.ADD_GROCERY, (action) => {\n    socket.send(TOPIC_INBOUND,  {}, JSON.stringify(action.payload))\n  })\n}\n\nexport default handleNewGrocery","export const TOPIC_OUTBOUND = '/outbound/message';\nexport const TOPIC_INBOUND = '/inbound/message';\nexport const SOCKET_CHANNEL = '/grocery-websocket';","// import * as types from '../ActionTypes'\nimport { groceryReceived } from '../actions'\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { SOCKET_CHANNEL, TOPIC_OUTBOUND } from '../../utils/constants';\n\nconst setupSocket = (dispatch) => {\n  const socket = new SockJS(SOCKET_CHANNEL);\n  const stompClient = Stomp.over(socket);\n  stompClient.connect({}, function (frame) {\n      console.log('Connected: ' + frame);\n      stompClient.subscribe(TOPIC_OUTBOUND, function (msg) {\n        dispatch(groceryReceived(JSON.parse(msg.body).content));\n      });\n  });\n  return stompClient\n}\n\nexport default setupSocket","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport './index.css'\nimport App from './App'\nimport reducers from './redux/reducers'\nimport handleGroceries from './redux/sagas'\nimport setupSocket from './redux/socket'\nimport { SOCKET_CHANNEL } from './utils/constants'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(sagaMiddleware)\n)\n\nconst socket = setupSocket(store.dispatch, SOCKET_CHANNEL)\n\nsagaMiddleware.run(handleGroceries, socket)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}